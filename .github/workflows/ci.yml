name: pull-request-checks

on:
  workflow_call:
    inputs:
      mode:
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: true
      GH_PAT:
        required: true

jobs:
  unit-tests:
    name: Unit & Lint Checks (${{ inputs.mode }})
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com/'

      - name: Auth to GitHub Packages
        run: |
          echo "@study-words:registry=https://npm.pkg.github.com" > ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Install dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit

      - name: Unit test coverage
        run: npm run test:unit:coverage

      - name: Fail if unit coverage < 90%
        run: |
          COVERAGE=$(node -e "console.log(require('./coverage/coverage-summary.json').total.lines.pct)")
          echo "Unit coverage is $COVERAGE%"
          if (( $(echo "$COVERAGE < 90" | bc -l) )); then
            echo "Coverage below 90% is not allowed"
            exit 1
          fi

  integration-tests:
    name: Integration Tests (${{ inputs.mode }})
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Start Docker services
        run: docker compose up -d

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if nc -z 127.0.0.1 3306; then echo "MySQL is ready"; break; fi
            echo "Waiting..."; sleep 2
          done

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Configure .npmrc for GitHub Packages
        run: |
          echo "@study-words:registry=https://npm.pkg.github.com" > ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Run integration tests
        env:
          DB_TEST_HOST: 127.0.0.1
          DB_TEST_PORT: 3306
          DB_TEST_USERNAME: root
          DB_TEST_PASSWORD: root
          DB_TEST_DATABASE: test_db
          DB_TEST_DIALECT: mysql
        run: npm run test:integration

      - name: Integration test coverage
        env:
          DB_TEST_HOST: 127.0.0.1
          DB_TEST_PORT: 3306
          DB_TEST_USERNAME: root
          DB_TEST_PASSWORD: root
          DB_TEST_DATABASE: test_db
          DB_TEST_DIALECT: mysql
        run: npm run test:integration:coverage

      - name: Fail if integration coverage < 90%
        run: |
          COVERAGE=$(node -e "console.log(require('./coverage/coverage-summary.json').total.lines.pct)")
          echo "Integration coverage is $COVERAGE%"
          if (( $(echo "$COVERAGE < 90" | bc -l) )); then
            echo "Coverage below 90% is not allowed"
            exit 1
          fi

      - if: always()
        run: docker compose down
